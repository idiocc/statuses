{
"version":3,
"file":"compile/statuses.js",
"lineCount":10,
"mappings":"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",
"sources":["src/codes.js","src/index.js","src/depack.js"],
"sourcesContent":["export default {\n  [100]: 'Continue',\n  [101]: 'Switching Protocols',\n  [102]: 'Processing',\n  [103]: 'Early Hints',\n  [200]: 'OK',\n  [201]: 'Created',\n  [202]: 'Accepted',\n  [203]: 'Non-Authoritative Information',\n  [204]: 'No Content',\n  [205]: 'Reset Content',\n  [206]: 'Partial Content',\n  [207]: 'Multi-Status',\n  [208]: 'Already Reported',\n  [226]: 'IM Used',\n  [300]: 'Multiple Choices',\n  [301]: 'Moved Permanently',\n  [302]: 'Found',\n  [303]: 'See Other',\n  [304]: 'Not Modified',\n  [305]: 'Use Proxy',\n  [306]: '(Unused)',\n  [307]: 'Temporary Redirect',\n  [308]: 'Permanent Redirect',\n  [400]: 'Bad Request',\n  [401]: 'Unauthorized',\n  [402]: 'Payment Required',\n  [403]: 'Forbidden',\n  [404]: 'Not Found',\n  [405]: 'Method Not Allowed',\n  [406]: 'Not Acceptable',\n  [407]: 'Proxy Authentication Required',\n  [408]: 'Request Timeout',\n  [409]: 'Conflict',\n  [410]: 'Gone',\n  [411]: 'Length Required',\n  [412]: 'Precondition Failed',\n  [413]: 'Payload Too Large',\n  [414]: 'URI Too Long',\n  [415]: 'Unsupported Media Type',\n  [416]: 'Range Not Satisfiable',\n  [417]: 'Expectation Failed',\n  [418]: 'I\\'m a teapot',\n  [421]: 'Misdirected Request',\n  [422]: 'Unprocessable Entity',\n  [423]: 'Locked',\n  [424]: 'Failed Dependency',\n  [425]: 'Unordered Collection',\n  [426]: 'Upgrade Required',\n  [428]: 'Precondition Required',\n  [429]: 'Too Many Requests',\n  [431]: 'Request Header Fields Too Large',\n  [451]: 'Unavailable For Legal Reasons',\n  [500]: 'Internal Server Error',\n  [501]: 'Not Implemented',\n  [502]: 'Bad Gateway',\n  [503]: 'Service Unavailable',\n  [504]: 'Gateway Timeout',\n  [505]: 'HTTP Version Not Supported',\n  [506]: 'Variant Also Negotiates',\n  [507]: 'Insufficient Storage',\n  [508]: 'Loop Detected',\n  [509]: 'Bandwidth Limit Exceeded',\n  [510]: 'Not Extended',\n  [511]: 'Network Authentication Required',\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\nimport statusCodes from './codes'\n\n// status code to message map\nexport const STATUS_CODES = statusCodes\n\n// array of status codes\nexport const codes = populateStatusesMap(status, statusCodes)\n\n// status codes for redirects\nexport const redirect = {\n  [300]: true,\n  [301]: true,\n  [302]: true,\n  [303]: true,\n  [305]: true,\n  [307]: true,\n  [308]: true,\n}\n\n// status codes for empty bodies\nexport const empty = {\n  [204]: true,\n  [205]: true,\n  [304]: true,\n}\n\n// status codes for when you should retry the request\nexport const retry = {\n  [502]: true,\n  [503]: true,\n  [504]: true,\n}\n\n/**\n * Populate the statuses map for given codes.\n * @return {!Array<string>}\n * @private\n */\nfunction populateStatusesMap(statuses, allCodes) {\n  const arr = []\n\n  Object.keys(allCodes).forEach((code) => {\n    const message = statusCodes[code]\n    const s = Number(code)\n\n    // Populate properties\n    statuses[s] = message\n    statuses[message] = s\n    statuses[message.toLowerCase()] = s\n\n    // Add to array\n    arr.push(s)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n * @param {string|number} code\n */\nexport default function status(code) {\n  if (typeof code == 'number') {\n    if (!status[code])\n      throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code != 'string')\n    throw new TypeError('code must be a number or string')\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","import '../types/externs'\nimport statuses, { STATUS_CODES, codes, empty, redirect, retry } from './'\n\nmodule.exports = {\n  '_status': statuses,\n  '_STATUS_CODES': STATUS_CODES,\n  '_codes': codes,\n  '_empty': empty,\n  '_redirect': redirect,\n  '_retry': retry,\n}"],
"names":["$jscompDefaultExport","codes","populateStatusesMap","statuses","status","arr","Object","keys","statusCodes","forEach","code","message","s","Number","toLowerCase","push","Error","TypeError","n","parseInt","isNaN","module","exports","STATUS_CODES","empty","redirect","retry"]
}
